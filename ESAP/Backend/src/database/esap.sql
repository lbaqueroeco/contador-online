CREATE DATABASE esap;

use esap;

CREATE TABLE IF NOT EXISTS roles (
    idroles INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    rol_nombre VARCHAR(60) NOT NULL
);


CREATE TABLE IF NOT EXISTS usuarios (
  idusuarios  INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  roles_idroles INT NULL,
  usu_nombre VARCHAR(200) NOT NULL,
  usu_email  VARCHAR(60) NOT NULL,
  usu_celular VARCHAR(45) NULL,
  usu_fecha TIMESTAMP NULL,
  usu_usuario  VARCHAR(60) NOT NULL,
  usu_password  VARCHAR(300) NOT NULL,
  usu_token  VARCHAR(300) ,
   CONSTRAINT fk_rol FOREIGN KEY(roles_idroles) REFERENCES roles(idroles) 

);

CREATE TABLE IF NOT EXISTS menus (
  idmenus INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
   men_nombre VARCHAR(45) NULL,
  men_ruta VARCHAR(100) NULL,
  men_orden VARCHAR(100) NOT NULL,
  men_categoria VARCHAR(100) NOT NULL
 );



CREATE TABLE IF NOT EXISTS permisos (
  idpermisos INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  per_crear SMALLINT NULL,
  per_editar SMALLINT NULL,
  per_eliminar SMALLINT NULL,
  menus_idmenus INT NULL,
  roles_idroles INT NULL,
  CONSTRAINT fk_menu FOREIGN KEY(menus_idmenus) REFERENCES menus(idmenus) ,
  CONSTRAINT fk_role FOREIGN KEY(roles_idroles) REFERENCES roles(idroles) 
);

CREATE TABLE IF NOT EXISTS paises(
  idpaises INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  pai_codigo VARCHAR(45) NULL,
  pai_nombre VARCHAR(100) NULL  
  );


CREATE TABLE IF NOT EXISTS territorial (
  idterritorial INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  ter_cod VARCHAR(45) NULL,
  ter_nombre VARCHAR(100) NULL,
  ter_macrozona VARCHAR(45) NULL,
  paises_idpaises INT NOT NULL,
  CONSTRAINT fk_territorial_paises1 FOREIGN KEY (paises_idpaises)REFERENCES paises (idpaises) ON DELETE NO ACTION ON UPDATE NO ACTION
  );


CREATE TABLE IF NOT EXISTS departamentos (
  iddepartamentos INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    dep_codigo VARCHAR(45) NULL,
  dep_nombre VARCHAR(45) NULL,
  territorial_idterritorial INT NOT NULL,
 CONSTRAINT fk_departamentos_territorial1 FOREIGN KEY (territorial_idterritorial) REFERENCES territorial (idterritorial) ON DELETE NO ACTION ON UPDATE NO ACTION
 );



CREATE TABLE IF NOT EXISTS ciudades (
  idciudades INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ciu_codigo VARCHAR(45) NULL,
  ciu_nombre VARCHAR(100) NULL,
  departamentos_iddepartamentos INT NOT NULL,
     CONSTRAINT fk_dpto FOREIGN KEY(departamentos_iddepartamentos) REFERENCES departamentos(iddepartamentos) ON DELETE NO ACTION ON UPDATE NO ACTION
);


CREATE TABLE IF NOT EXISTS clasificaaportantes (
  idclasificaaportantes INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  cla_codigo VARCHAR(45) NULL,
  cla_nombre VARCHAR(45) NULL
);

CREATE TABLE IF NOT EXISTS sectores (
  idsectores INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  sec_codigo VARCHAR(45) NULL,
  sec_nombre VARCHAR(45) NULL
);


CREATE TABLE IF NOT EXISTS estructuranomina (
  idestructuranomina INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  est_codigo VARCHAR(45) NULL,
  est_nombre VARCHAR(45) NULL
);

CREATE TABLE IF NOT EXISTS documentos (
  iddocumentos INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  doc_nombre VARCHAR(100) NULL,
  doc_ruta VARCHAR(100) NULL,
  doc_idvienede INT NULL,
  doc_tabla VARCHAR(45) NULL,
  doc_version VARCHAR(45) NULL
);

CREATE TABLE IF NOT EXISTS tipoadscrita (
  idtipoadscrita INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  tad_codigo VARCHAR(45) NULL,
  tad_descripcion VARCHAR(45) NULL
);



CREATE TABLE IF NOT EXISTS aportantes (
  idaportantes INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  apo_nombre VARCHAR(100) NULL,
  apo_email VARCHAR(45) NULL,
  apo_celular VARCHAR(45) NULL,
  apo_identificacion VARCHAR(45) NULL,
  apo_sufijo VARCHAR(45) NULL,
  apo_direccion VARCHAR(45) NULL,
  apo_fax VARCHAR(45) NULL,
  apo_tipoidentificacion VARCHAR(45) NULL,
  apo_firma VARCHAR(45) NULL,
  apo_ordenentidad VARCHAR(45) NULL DEFAULT 'Nacional, Departamental, Municipal',
  apo_tipoaportante VARCHAR(45) NULL DEFAULT 'Obligado, No obligado, En estudio de obligatoriedad',
  estructuranomina_idestructuranomina INT NULL,
  clasificaaportantes_idclasificaaportantes INT NULL,
  sectores_idsectores INT NULL,
  ciudades_idciudades INT NULL,
  tipoadscrita_idtipoadscrita INT NULL,
 CONSTRAINT fk_sectores FOREIGN KEY(sectores_idsectores) REFERENCES sectores(idsectores),
CONSTRAINT fk_ciudadesdeptos FOREIGN KEY(ciudades_idciudades) REFERENCES ciudades(idciudades) ,
CONSTRAINT fk_estrucnomina FOREIGN KEY(estructuranomina_idestructuranomina) REFERENCES estructuranomina(idestructuranomina) ,
CONSTRAINT fk_clasaportantes FOREIGN KEY(clasificaaportantes_idclasificaaportantes) REFERENCES clasificaaportantes(idclasificaaportantes) ,
CONSTRAINT fk_aportantes_tipoadscrita1 FOREIGN KEY (tipoadscrita_idtipoadscrita) REFERENCES tipoadscrita (idtipoadscrita) 

);




CREATE TABLE IF NOT EXISTS responsables (
  idresponsables INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  res_nombre VARCHAR(45) NULL,
  res_identificacion VARCHAR(45) NULL,
  res_cargo VARCHAR(45) NULL,
  res_email VARCHAR(45) NULL,
  res_telefono VARCHAR(45) NULL,
 aportantes_idaportantes INT NULL,
    CONSTRAINT fk_responsables_aportantes1 FOREIGN KEY (aportantes_idaportantes) REFERENCES aportantes (idaportantes) 
);



CREATE TABLE IF NOT EXISTS sedes (
  idsedes INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  sed_codigo VARCHAR(45) NULL,
  sed_nombre VARCHAR(45) NULL,
  sed_direccion VARCHAR(45) NULL,
  ciudades_idciudades INT NULL,
  CONSTRAINT fk_sedes_ciudades FOREIGN KEY (ciudades_idciudades) REFERENCES ciudades(idciudades) 
  );

CREATE TABLE IF NOT EXISTS aportesmunicipios(
  idaportesmunicipios INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  aps_fecha DATE NULL,
  aps_monto INT NULL,
  aps_descripcion VARCHAR(450) NULL,
  aportantes_idaportantes INT NULL,
  ciudades_idciudades INT NULL,
  CONSTRAINT fk_aportessedes_aportantes1 FOREIGN KEY (aportantes_idaportantes) REFERENCES aportantes (idaportantes),
  CONSTRAINT fk_aportesmunicipios_ciudades1 FOREIGN KEY (ciudades_idciudades)  REFERENCES ciudades (idciudades) 
  );


CREATE TABLE IF NOT EXISTS tiposdocumentos(
  idtiposdocumentos INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  tid_nombre VARCHAR(45) NULL
  );

CREATE TABLE IF NOT EXISTS documentosaportantes(
  iddocumentosaportantes INT  PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  apo_nombre VARCHAR(100) NULL,
  apo_ruta VARCHAR(100) NULL,
  apo_fecha TIMESTAMP NULL,
  apo_version INT NULL,
  tiposdocumentos_idtiposdocumentos INT NULL,
  aportantes_idaportantes INT NULL,
   CONSTRAINT fk_documentosaportantes_tiposdocumentos1
    FOREIGN KEY (tiposdocumentos_idtiposdocumentos)
    REFERENCES tiposdocumentos(idtiposdocumentos),
  CONSTRAINT fk_documentosaportantes_aportantes1
    FOREIGN KEY (aportantes_idaportantes)
    REFERENCES aportantes (idaportantes)

);
CREATE VIEW view_ciudadesaportesmunicipios
 AS SELECT apomun.idaportesmunicipios, apomun.aps_fecha, apomun.aps_monto, apomun.aps_descripcion, apomun.aportantes_idaportantes, ciu.idciudades AS ciuapomun_id, ciu.ciu_nombre AS ciuapomun_nombre
 FROM aportesmunicipios apomun INNER JOIN ciudades ciu ON apomun.ciudades_idciudades = ciu.idciudades;
